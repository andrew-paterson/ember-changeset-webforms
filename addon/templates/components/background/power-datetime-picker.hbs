<div
  class="power-datetime-picker"
  {{did-insert (action "didInsert")}}
  ...attributes
>
  <BasicDropdown
    @renderInPlace={{true}}
    @onClose={{fn (action "checkDateInputFocus")}}
    as |dropdown|
  >
    <dropdown.Trigger
      @eventType="mousedown"
      onmousedown={{fn (action "onTriggerFocus")}}
      class={{@triggerWrapperClass}}
      ariaLabelledBy={{@ariaLabelledBy}}
      aria-label={{@ariaLabel}}
    >
      {{#if @value}}
        <button
          type="button"
          class="{{@clearDateTimeButtonClass}}"
          data-test-id="datetime-picker-clear-datetime"
          {{on "click" (action "clearDateTime")}}
        >Ã—</button>
      {{else}}
        <div class="{{@calendarIconClass}}"></div>
      {{/if}}
      <input
        type="text"
        value={{if
          @value
          (ember-changeset-webforms/moment-format
            (ember-changeset-webforms/moment @value this.parsedDateTimeFormat)
            this.parsedDateTimeDisplayFormat
          )
        }}
        placeholder={{this.parsedDatepickerPlaceholder}}
        onChange={{fn (action "onDateInputChange")}}
        onKeyUp={{fn (action "onDateInputKeyUp")}}
        onFocus={{fn (action "onDateInputFocus")}}
        onBlur={{fn (action "onDateInputBlur")}}
        class={{@triggerInputClass}}
        id={{@triggerInputId}}
        data-test-id="power-datepicker-input"
      />
    </dropdown.Trigger>
    <dropdown.Content
      data-test-id="ecw-power-datepicker-dropdown"
      class={{@dropdownClass}}
    >
      <div class={{@dropdownInnerClass}}>
        <PowerCalendar
          @minDate={{@minDate}}
          @maxDate={{@maxDate}}
          @selected={{this.selectedDate}}
          @onSelect={{fn (action "dateClicked") dropdown}}
          @onCenterChange={{fn (mut this.center) value="date"}}
          @center={{this.center}}
          class={{@calendarClass}}
          as |calendar|
        >
          <Background::PowerCalendarNav
            @calendar={{calendar}}
            @calendarTitleFormat={{@calendarTitleFormat}}
            @moveCenter={{fn calendar.actions.moveCenter}}
            class={{@calendarNavClass}}
          />
          <calendar.Days
            @minDate={{@minDate}}
            @maxDate={{@maxDate}}
            class={{@calendarDaysClass}}
          />
        </PowerCalendar>
        {{#if (and @showTimeSelector @value (not @fixedTime))}}
          <div
            data-test-id="time-selector"
            class="time-select
              {{unless @value 'disabled'}}
              {{@timeSelectorContainerClass}}"
          >
            {{#each this.timeFormatParts as |timeFormatPart|}}
              <div
                data-test-class="time-selector-field"
                data-test-id="time-selector-field-{{timeFormatPart.type}}"
                class="time-selector-field time-selector-field-{{timeFormatPart.type}}"
              >
                <label
                  for="time-selector-{{timeFormatPart.type}}"
                  data-test-class="time-selector-field-label"
                  data-test-id="time-selector-field-label-{{timeFormatPart.type}}"
                  class={{@timeInputLabelClass}}
                >{{timeFormatPart.label}}</label>
                <input
                  id="time-selector-{{timeFormatPart.type}}"
                  data-test-class="time-selector-field-input"
                  data-test-id="time-selector-field-input-{{timeFormatPart.type}}"
                  type="number"
                  max={{timeFormatPart.max}}
                  min={{timeFormatPart.min}}
                  value={{readonly
                    (if
                      @value
                      (ember-changeset-webforms/moment-format
                        (ember-changeset-webforms/moment
                          @value this.parsedDateTimeFormat
                        )
                        timeFormatPart.formatChar
                      )
                    )
                  }}
                  onChange={{fn (action "setTime") timeFormatPart.formatChar}}
                  onKeyDown={{fn
                    (action "onKeyDownTimeUnitInput")
                    timeFormatPart.formatChar
                  }}
                  onKeyUp={{fn
                    (action "onKeyUpTimeUnitInput")
                    timeFormatPart.formatChar
                  }}
                  class="time-selector-field-input-{{timeFormatPart.type}}
                    {{@timeInputClass}}"
                />
              </div>
            {{/each}}
            {{#if this.showAmPmInput}}
              <div>
                <label
                  for="time-selector-am-pm"
                  data-test-class="time-selector-field-label"
                  data-test-id="time-selector-field-label-am-pm"
                  class={{@timeInputLabelClass}}
                >{{@timeInputLabels.amPm}}</label>
                <input
                  type="text"
                  id="time-selector-am-pm"
                  value={{if
                    @value
                    (ember-changeset-webforms/moment-format
                      (ember-changeset-webforms/moment
                        @value this.parsedDateTimeFormat
                      )
                      "a"
                    )
                  }}
                  onChange={{fn (action "onChangeAmPm")}}
                  onFocus={{fn (action "onFocusInAmPm")}}
                  onBlur={{fn (action "onChangeAmPm")}}
                  onKeyUp={{fn (action "onKeyUpAmPm")}}
                  data-test-id="power-datepicker-am-pm-input"
                  class={{@timeInputClass}}
                />
              </div>
            {{/if}}
          </div>
        {{/if}}
      </div>
    </dropdown.Content>
  </BasicDropdown>
</div>