{"version":3,"file":"validating-clone-group.js","sources":["../../../../src/components/ember-changeset-webforms/cloned-field-elements/validating-clone-group.js"],"sourcesContent":["import { action } from '@ember/object';\nimport Component from '@glimmer/component';\nimport { tracked } from '@glimmer/tracking';\nimport FormFieldClone from '../../../utils/form-field-clone';\nimport removeObject from '../../../utils/remove-object.js';\nimport './validating-clone-group.css';\n\nclass destinationElementClass {\n  @tracked cloneGroupActions;\n  @tracked cloneGroupWrapper;\n  @tracked preClones;\n  @tracked labelWrapper;\n}\n\nexport default class ValidatingCloneGroup extends Component {\n  @tracked masterFormField;\n  @tracked destinationElement = new destinationElementClass();\n\n  get dataTestCwfFieldValidates() {\n    return this.args.masterFormField.validates;\n  }\n\n  get dataTestCwfFieldRequired() {\n    return this.args.masterFormField.required;\n  }\n\n  get dataTestId() {\n    return `clone-group-${this.args.masterFormField.id}`;\n  }\n\n  get validationStatus() {\n    var formField = this.args.masterFormField;\n    if (!formField) {\n      return null;\n    }\n    if (\n      !formField.eventLogValidated.filter((item) => !item.endsWith('Clone'))\n        .length\n    ) {\n      return null;\n    }\n    var validationErrors = this.args.masterFormFieldValidationErrors || [];\n    if (validationErrors.length === 0) {\n      return 'valid';\n    } else {\n      return 'invalid';\n    }\n  }\n\n  get cloneGroupNameClass() {\n    return `clone-group-${this.args.masterFormField.cloneGroupName}`;\n  }\n\n  get cloneGroupActionsDestinationElement() {\n    return this.destinationElement[\n      this.args.masterFormField.cloneGroupActionsPosition\n    ];\n  }\n\n  cloneId(masterFormField) {\n    const clonedFields = masterFormField.clonedFields;\n    if (!(clonedFields || []).length) {\n      return 0;\n    }\n    const sortedClones = [...clonedFields].sort((a, b) => {\n      return b.cloneId - a.cloneId;\n    });\n    return sortedClones[0].cloneId + 1;\n  }\n\n  @action\n  didInsertWrapper(namespace, element) {\n    var masterFormField = this.args.masterFormField;\n    const changeset = this.args.changesetWebform.changeset;\n    var groupValue = changeset.get(masterFormField.propertyName) || [];\n    groupValue.forEach(() => {\n      this.cloneField({ fromData: true });\n    });\n    const emptyClones = masterFormField.minClones - groupValue.length;\n    for (var i = 0; i < emptyClones; i++) {\n      this.cloneField();\n    }\n    this.registerElementContainer(namespace, element);\n  }\n\n  @action\n  onClickAddCloneButton() {\n    this.cloneField();\n    if (this.args.onUserInteraction) {\n      this.args.onUserInteraction('addClone');\n    }\n  }\n\n  @action\n  cloneField(opts = {}) {\n    var masterFormField = this.args.masterFormField;\n    masterFormField.clonedFields = masterFormField.clonedFields || [];\n    var newField = { ...masterFormField.clonedFieldBlueprint };\n    newField.id = `${masterFormField.id}-clone-${this.cloneId(masterFormField)}`;\n    newField.isClone = true;\n    newField.cloneId = this.cloneId(masterFormField);\n    newField.eventLog = []; // BD must recreate this, otherwise all clones share the same instance of eventLog array.\n    const clone = new FormFieldClone(newField);\n    clone.changeset = this.args.changesetWebform.changeset;\n    clone.masterFormField = masterFormField;\n    masterFormField.clonedFields.push(clone);\n    // masterFormField.clonedFields = masterFormField.clonedFields;\n    clone.index = masterFormField.clonedFields.indexOf(clone);\n    var lastIndex = masterFormField.clonedFields.length - 1;\n    masterFormField.lastUpdatedClone = {\n      // Useful for something like swapping field values between clones.\n      index: lastIndex,\n      previousValue: null,\n    };\n    if (!opts.fromData) {\n      var fieldValue =\n        this.args.changesetWebform.changeset.get(\n          masterFormField.propertyName,\n        ) || [];\n      fieldValue.push(opts.newCloneValue || newField.defaultValue);\n      this.args.updateFieldValue(fieldValue, masterFormField);\n    }\n    this.checkMinMaxClones(masterFormField);\n  }\n\n  @action\n  removeClone(clone) {\n    var masterFormField = this.args.masterFormField;\n    var index = masterFormField.clonedFields.indexOf(clone);\n    removeObject(masterFormField.clonedFields, clone);\n    this.checkMinMaxClones(masterFormField);\n    var groupValue =\n      this.args.changesetWebform.changeset.get(masterFormField.propertyName) ||\n      []; //TODO check this.\n    groupValue.splice(index, 1);\n    masterFormField.eventLog.push('removeClone');\n    this.args.updateFieldValue(groupValue, masterFormField);\n\n    masterFormField.clonedFields.forEach((clone, index) => {\n      clone.index = index;\n    });\n    if (this.args.onUserInteraction) {\n      this.args.onUserInteraction('removeClone');\n    }\n  }\n\n  @action\n  checkMinMaxClones(masterFormField) {\n    if (\n      masterFormField.maxClones &&\n      masterFormField.clonedFields.length >= masterFormField.maxClones\n    ) {\n      masterFormField.cloneCountStatus = 'max';\n    } else if (\n      masterFormField.minClones &&\n      masterFormField.clonedFields.length === masterFormField.minClones\n    ) {\n      masterFormField.cloneCountStatus = 'min';\n    } else {\n      masterFormField.cloneCountStatus = null;\n    }\n  }\n\n  @action\n  registerElementContainer(namespace, element) {\n    this.destinationElement[namespace] = element;\n  }\n}\n"],"names":["destinationElementClass","g","prototype","tracked","i","void 0","ValidatingCloneGroup","Component","dataTestCwfFieldValidates","args","masterFormField","validates","dataTestCwfFieldRequired","required","dataTestId","id","validationStatus","formField","eventLogValidated","filter","item","endsWith","length","validationErrors","masterFormFieldValidationErrors","cloneGroupNameClass","cloneGroupName","cloneGroupActionsDestinationElement","destinationElement","cloneGroupActionsPosition","cloneId","clonedFields","sortedClones","sort","a","b","didInsertWrapper","namespace","element","changeset","changesetWebform","groupValue","get","propertyName","forEach","cloneField","fromData","emptyClones","minClones","registerElementContainer","n","action","onClickAddCloneButton","onUserInteraction","opts","newField","clonedFieldBlueprint","isClone","eventLog","clone","FormFieldClone","push","index","indexOf","lastIndex","lastUpdatedClone","previousValue","fieldValue","newCloneValue","defaultValue","updateFieldValue","checkMinMaxClones","removeClone","removeObject","splice","maxClones","cloneCountStatus","setComponentTemplate","TEMPLATE"],"mappings":"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"}